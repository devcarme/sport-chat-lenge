{"version":3,"sources":["images/chatsport.png","form/LoginForm.js","select/QuestionnaireSelect.js","Questionnaires.js","Question.js","Questionnaire.js","ValidationQuestionnaire.js","index.js","config/globals.js"],"names":["LoginForm","state","pseudo","password","error","handleChangePseudo","event","setState","currentTarget","value","handleChangePassword","handleSubmit","preventDefault","props","onLogin","Form","onSubmit","this","Group","controlId","Control","type","placeholder","required","onChange","autoComplete","Text","className","Row","Col","xs","span","offset","md","sm","lg","xl","Button","variant","Component","QuestionnaireSelect","details","idQuestionnaire","nomQuestionnaire","Questionnaires","history","useHistory","useState","setIdQuestionnaire","questionnaires","setQuestionnaires","useEffect","fetch","globals","url","then","res","json","Container","push","as","defaultValue","hidden","map","questionnaire","Question","setResponse","handleChange","arrayResponse","idQuestion","response","onChangeRadio","requestOptions","method","headers","body","JSON","stringify","idResponsesQuestions","ok","reponse","document","getElementById","checked","getResponse","style","backgroundColor","padding","height","texteQuestion","onClick","isAlreadyAnswered","name","id","for","class","Questionnaire","mode","addResponse","responsesTmp","Map","responses","set","handleClickCancel","mapResponses","objArrayResponses","Object","fromEntries","console","log","catch","questionsNumber","questions","index","indexResponse","params","match","getResponsesQuestions","getQuestions","getQuestionnaire","getQuestionsNumber","arrowStyles","position","zIndex","top","width","cursor","color","indicatorStyles","display","margin","question","renderArrowPrev","onClickHandler","hasPrev","label","title","left","border","icon","bxsLeftArrow","fontSize","filter","renderArrowNext","hasNext","right","bxsRightArrow","statusFormatter","current","total","renderIndicator","isSelected","background","aria-label","onKeyDown","role","tabIndex","float","size","ValidationQuestionnaire","okIcon","Content","setSportifs","setError","src","logo","alt","dataSportif","Index","exact","path","component","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.da0a58ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chatsport.f5198b02.png\";","import React, { Component }  from \"react\";\r\nimport { Form, Button, Row, Col} from \"react-bootstrap\";\r\n\r\nclass LoginForm extends Component{\r\n    state={\r\n        pseudo:\"\",\r\n        password:\"\",\r\n        error:\"\"\r\n    }\r\n\r\n    handleChangePseudo = (event) => {\r\n        this.setState({pseudo: event.currentTarget.value});\r\n    };\r\n    \r\n    handleChangePassword = (event) => {\r\n        this.setState({password: event.currentTarget.value});\r\n    };\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        var pseudo = this.state.pseudo;\r\n        var password = this.state.password;\r\n        this.props.onLogin({pseudo, password});\r\n    };\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control type=\"text\" placeholder=\"Pseudo\" required value={this.state.pseudo} onChange={this.handleChangePseudo} autoComplete=\"on\" />\r\n                        <Form.Text className=\"text-muted\">\r\n\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control type=\"password\" placeholder=\"Mot de passe\" required value={this.state.password} onChange={this.handleChangePassword} autoComplete=\"on\" />\r\n                    </Form.Group>\r\n                    <Row>\r\n                        <Col xs={{span: 8, offset: 2}} md={{span: 8, offset: 2}} sm={{span: 8, offset: 2}} lg={{span: 9, offset: 2}} xl={{span: 8, offset: 2}}>\r\n                            <Button variant=\"primary btn-block\" type=\"submit\" className=\"button\" >\r\n                                Connexion\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>            \r\n        )\r\n    };\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\n\r\nconst QuestionnaireSelect = ({ details }) => (\r\n  <option value={details.idQuestionnaire}>{details.nomQuestionnaire}</option>\r\n);\r\n\r\nexport default QuestionnaireSelect;\r\n","import React, { useEffect, useState }  from \"react\";\r\nimport { useHistory, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Form, Col, Container, Row, Button } from \"react-bootstrap\"; \r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/main.css';\r\n\r\nimport globals from \"./config/globals\";\r\n\r\nimport QuestionnaireSelect from \"./select/QuestionnaireSelect\";\r\n\r\nfunction Questionnaires(props){\r\n    const history = useHistory();\r\n    const [idQuestionnaire, setIdQuestionnaire] = useState(\"\");\r\n\r\n    const [questionnaires, setQuestionnaires] = useState([]);\r\n\r\n    const getAllQuestionnaires = () =>{\r\n        fetch(globals.url+ \"getAllQuestionnaires\")\r\n            .then(res => res.json())\r\n            .then(res => setQuestionnaires(res))\r\n    };\r\n\r\n    const handleChangeQuestionnaire = (event) => {\r\n        setIdQuestionnaire(event.currentTarget.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        history.push(\"questionnaire/\"+idQuestionnaire);\r\n    };\r\n    \r\n    useEffect(()=> {\r\n        getAllQuestionnaires();\r\n    },[])\r\n\r\n    return(\r\n        <Container className=\"h-100 mt-5\">\r\n            <Row className=\"h-100 justify-content-center align-items-center\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\" className=\"col-12\" >\r\n                    <h3>Choisir un questionnaire</h3>\r\n                        <Form.Control as=\"select\" required value={idQuestionnaire}  onChange={handleChangeQuestionnaire}>\r\n                            <option defaultValue required value=\"\" hidden>Tous les questionnaires</option>\r\n                            {questionnaires.map(questionnaire => (\r\n                                <QuestionnaireSelect\r\n                                key={questionnaire.idQuestionnaire}\r\n                                details={questionnaire}\r\n                                />\r\n                                ))}\r\n                        </Form.Control>\r\n                        <Col>\r\n                            <Button variant=\"primary btn-block mt-3\" type=\"submit\" className=\"button\">Commencer</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Questionnaires;","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Row, Col, Button, ButtonGroup } from \"bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport \"./css/main.css\";\r\nimport globals from \"./config/globals\";\r\n\r\n\r\nfunction Question (props) {\r\n\r\n  const [response, setResponse] = useState(null);\r\n\r\n  const handleChange = (event) =>{\r\n      var arrayResponse = {idQuestion: props.details.idQuestion, response: event.currentTarget.value}\r\n      props.onChangeRadio(arrayResponse);\r\n  };\r\n\r\n  const handleCheckYes = (event) =>{\r\n    if(props.isAlreadyAnswered){\r\n      event.preventDefault();\r\n    }else{\r\n      document.getElementById(`custom-radio-1${props.details.idQuestion}`).checked = true;\r\n      document.getElementById(`custom-radio-2${props.details.idQuestion}`).checked = false;\r\n      handleChange(event);\r\n    }\r\n  };\r\n\r\n  const handleCheckNo = (event) =>{\r\n    if(props.isAlreadyAnswered){\r\n      event.preventDefault();\r\n    }else{\r\n      document.getElementById(`custom-radio-2${props.details.idQuestion}`).checked = true;\r\n      document.getElementById(`custom-radio-1${props.details.idQuestion}`).checked = false;\r\n      handleChange(event);\r\n    }\r\n  };\r\n\r\n  const getResponse = () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\"},\r\n      body: JSON.stringify({idQuestion: props.details.idQuestion, idResponsesQuestions: props.idResponsesQuestions})\r\n    };\r\n  \r\n    fetch(globals.url + \"getResponse\", requestOptions)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if(res.ok){\r\n          setResponse(res.reponse)\r\n          if(res.reponse === 1){\r\n            document.getElementById(`custom-radio-1${props.details.idQuestion}`).checked = true;\r\n          } else if(res.reponse === 0){\r\n            document.getElementById(`custom-radio-2${props.details.idQuestion}`).checked = true;\r\n          }\r\n        }\r\n      })\r\n  };\r\n\r\n  useEffect(()=> {\r\n    getResponse();\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"container\" style={{ backgroundColor: \"white\", padding: 20, height: 150 }}>\r\n      <h2>{props.details.texteQuestion}</h2>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"form-check\">\r\n          <input onClick={handleCheckYes} className=\"form-check-input\" type=\"radio\" name={`radio-group${props.details.idQuestion}`} id={`custom-radio-1${props.details.idQuestion}`} value=\"1\"\r\n          />\r\n          <label className=\"form-check-label\" for={`custom-radio-1${props.details.idQuestion}`}>\r\n            Oui\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check ml-5\">\r\n          <input onClick={handleCheckNo} class=\"form-check-input\" type=\"radio\" name={`radio-group${props.details.idQuestion}`} id={`custom-radio-2${props.details.idQuestion}`} value=\"0\" />\r\n          <label className=\"form-check-label\" for={`custom-radio-2${props.details.idQuestion}`}>\r\n            Non\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default Question;","import React, { Component } from \"react\";\r\nimport { useHistory, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { Row, Col, Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport bxsRightArrow from '@iconify/icons-bx/bxs-right-arrow';\r\nimport bxsLeftArrow from '@iconify/icons-bx/bxs-left-arrow';\r\n\r\nimport globals from \"./config/globals\";\r\n\r\nimport Question from \"./Question\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n\r\n\r\nclass Questionnaire extends Component {\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idQuestionnaire: 0,\r\n      questionsNumber: 0,\r\n      questions: [],\r\n      questionnaire: [],\r\n      index: 1,\r\n      responses: new Map(),\r\n      error:\"\",\r\n      isAlreadyAnswered: false,\r\n      indexResponse: 0,\r\n      idResponsesQuestions: null\r\n    };\r\n  }\r\n\r\n  isAlreadyAnswered = (questionnaire) => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\"Content-type\": \"application/json\"},\r\n      body: JSON.stringify({idQuestionnaire: questionnaire})\r\n    };\r\n    \r\n    fetch(globals.url + \"isAlreadyAnswered\", requestOptions)\r\n      .then(res => res.json())\r\n      .then(res => this.setState({isAlreadyAnswered: res.ok}))\r\n  };\r\n\r\n  addResponse = (arrayResponse) => {\r\n    let trouve = 0;\r\n    let responsesTmp = new Map();\r\n    responsesTmp = this.state.responses;\r\n    responsesTmp.set(arrayResponse.idQuestion, arrayResponse.response);\r\n    this.setState({responses: responsesTmp});\r\n  }\r\n\r\n  handleClickCancel = () => {\r\n   const { history } = this.props;\r\n   if(history) history.push('/questionnaires');\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { history } = this.props;\r\n    let mapResponses = new Map();\r\n    mapResponses = this.state.responses;\r\n    mapResponses.set(\"idQuestionnaire\", this.state.idQuestionnaire);\r\n    let objArrayResponses = Object.fromEntries(mapResponses);\r\n\r\n    console.log(JSON.stringify(objArrayResponses));\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\"Content-type\": \"application/json\"},\r\n      body: JSON.stringify(objArrayResponses)\r\n    };\r\n    \r\n    fetch(globals.url + \"sendResponses\", requestOptions)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if(res.ok){\r\n          history.push(\"/validationQuestionnaire\");\r\n        }\r\n      }) \r\n      .catch(error => {\r\n        console.log(\"Erreur :\", error)\r\n      });\r\n  };\r\n\r\n  getQuestions(questionnaire){\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\"},\r\n      body: JSON.stringify({idQuestionnaire: questionnaire})\r\n    };\r\n  \r\n    fetch(globals.url + \"getQuestionsByQuestionnaire\", requestOptions)\r\n      .then(res => res.json())\r\n      .then(res => this.setState({questions: res}))\r\n  }\r\n\r\n  getQuestionnaire(questionnaire){\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\"},\r\n      body: JSON.stringify({idQuestionnaire: questionnaire})\r\n    };\r\n  \r\n    fetch(globals.url + \"getQuestionnaire\", requestOptions)\r\n      .then(res => res.json())\r\n      .then(res => this.setState({questionnaire: res}))\r\n  }\r\n\r\n  getQuestionsNumber(questionnaire){\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\"},\r\n      body: JSON.stringify({idQuestionnaire: questionnaire})\r\n    };\r\n  \r\n    fetch(globals.url + \"getQuestionsNumber\", requestOptions)\r\n      .then(res => res.json())\r\n      .then(res => this.setState({questionsNumber: res.questionsNumber}))\r\n  }\r\n\r\n  getResponsesQuestions(questionnaire){\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\"},\r\n      body: JSON.stringify({idQuestionnaire: questionnaire})\r\n    };\r\n  \r\n    fetch(globals.url + \"getResponsesQuestions\", requestOptions)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if(res.ok){\r\n          this.setState({idResponsesQuestions: res.idResponsesQuestions})\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    const { match: { params } } = this.props;\r\n    this.setState({idQuestionnaire: params.idQuestionnaire});\r\n    this.getResponsesQuestions(params.idQuestionnaire);\r\n    this.getQuestions(params.idQuestionnaire);\r\n    this.getQuestionnaire(params.idQuestionnaire);\r\n    this.getQuestionsNumber(params.idQuestionnaire);\r\n    this.isAlreadyAnswered(params.idQuestionnaire);\r\n  }\r\n\r\n  render() {\r\n    const arrowStyles: CSSProperties = {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n        top: 'calc(50% - 15px)',\r\n        width: 30,\r\n        height: 30,\r\n        cursor: 'pointer',\r\n        color:\"yellow\"\r\n    };\r\n\r\n    const indicatorStyles: CSSProperties = {\r\n        backgroundColor: \"white\",\r\n        color: \"yellow\",\r\n        width: 8,\r\n        height: 8,\r\n        display: 'inline-block',\r\n        margin: '0 8px',\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\" style={{ backgroundColor: \"white\", padding: 20, height: 150 }}>\r\n        <div className=\"row justify-content-center\">\r\n          <h1>Questionnaire {this.state.questionnaire.map(question => question.nomQuestionnaire)}</h1>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Carousel \r\n              renderArrowPrev={(onClickHandler, hasPrev, label) =>\r\n                hasPrev && (\r\n                  <button type=\"button\" onClick={onClickHandler} title={label} style={{ ...arrowStyles, left: 15, backgroundColor:\"transparent\", border:0 }}>\r\n                    <Icon icon={bxsLeftArrow} style={{color: '#FED018', fontSize: '35px', filter: \"drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))\"}} />\r\n                  </button>\r\n                )\r\n              }\r\n              renderArrowNext={(onClickHandler, hasNext, label) =>\r\n                  hasNext && (\r\n                      <button type=\"button\" onClick={onClickHandler} title={label} style={{ ...arrowStyles, right: 15, backgroundColor:\"transparent\", border:0 }}>\r\n                          <Icon icon={bxsRightArrow} style={{color: '#FED018', fontSize: '35px', filter: \"drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))\"}} />\r\n                      </button>\r\n                  )\r\n              }\r\n              statusFormatter={(current, total) => ``}\r\n\r\n              renderIndicator={(onClickHandler, isSelected, index, label) => {\r\n                      if (isSelected) {\r\n                          return (\r\n                              <li\r\n                                  style={{ ...indicatorStyles, background: 'white' }}\r\n                                  aria-label={`Selected: ${label} ${index + 1}`}\r\n                                  title={`Selected: ${label} ${index + 1}`}\r\n                              />\r\n                          );\r\n                      }\r\n                      return (\r\n                          <li\r\n                              style={indicatorStyles}\r\n                              onClick={onClickHandler}\r\n                              onKeyDown={onClickHandler}\r\n                              value={index}\r\n                              key={index}\r\n                              role=\"button\"\r\n                              tabIndex={0}\r\n                              title={`${label} ${index + 1}`}\r\n                              aria-label={`${label} ${index + 1}`}\r\n                          />\r\n                      );\r\n                  }}\r\n              >\r\n              {this.state.questions.map(question => (\r\n              <div>\r\n                <Question \r\n                  key={question.idQuestion} \r\n                  details={question}\r\n                  onChangeRadio={this.addResponse}\r\n                  idResponsesQuestions={this.state.idResponsesQuestions}\r\n                  isAlreadyAnswered={this.state.isAlreadyAnswered}\r\n                />\r\n              </div>\r\n              ))}\r\n            </Carousel>\r\n            {this.state.error !== \"\"\r\n              ? <h2>{this.state.error}</h2>\r\n              : <h2></h2>\r\n            }\r\n            <Button variant=\"secondary\" style={{float:\"right\"}} onClick={this.handleClickCancel}>Annuler</Button>\r\n            {this.state.responses.size === this.state.questionsNumber && !this.state.isAlreadyAnswered \r\n              ?<Button variant=\"primary mr-5\" type=\"submit\" className=\"button\" style={{float:\"right\"}}>Envoyer</Button>\r\n              :<Button variant=\"primary mr-5\" type=\"submit\" className=\"button\" style={{float:\"right\", display:\"none\"}}>Envoyer</Button>\r\n            }\r\n            \r\n        </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questionnaire;","import React, { Component, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Row, Col, ButtonGroup } from \"bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport okIcon from '@iconify/icons-flat-color-icons/ok';\r\n\r\nimport \"./css/main.css\";\r\nimport globals from \"./config/globals\";\r\n\r\n\r\nfunction ValidationQuestionnaire (props) {\r\n  const history = useHistory();\r\n\r\n  const handleClickButton = () =>{\r\n      history.push(\"/questionnaires\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row flex-column mt-5\">\r\n        <div className=\"col-4 align-self-center text-center\">\r\n          <h2>Réponses envoyées</h2>\r\n          <Icon icon={okIcon} style={{\"font-size\":40}} className=\"mt-5\"/>\r\n          <Form onSubmit={handleClickButton} className=\"mt-5\">\r\n            <Button variant=\"primary\" type=\"submit\">Autre questionnaire</Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default ValidationQuestionnaire;","import React, { useEffect, useState, Component }  from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useHistory, BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Col, Container, Row } from \"react-bootstrap\"; \r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/main.css';\r\n\r\nimport globals from \"./config/globals\";\r\nimport logo from \"./images/chatsport.png\";\r\n\r\nimport LoginForm from \"./form/LoginForm\";\r\nimport Questionnaires from \"./Questionnaires\";\r\nimport Questionnaire from \"./Questionnaire\";\r\nimport ValidationQuestionnaire from \"./ValidationQuestionnaire\";\r\n\r\nfunction Content(){\r\n    let history = useHistory();\r\n    \r\n    const [sportifs, setSportifs] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const getAllSportifs = () =>{\r\n        fetch(globals.url+ \"getAllSportifs\")\r\n            .then(res => res.json())\r\n            .then(res => setSportifs(res))\r\n    };\r\n\r\n    function verifySportif (dataSportif) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\"Content-type\": \"application/json; charset=UTF-8\"},\r\n            body: JSON.stringify(dataSportif)\r\n        };\r\n        \r\n        fetch(globals.url + \"verifySportif\", requestOptions)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.ok){\r\n                    history.push(\"/questionnaires\")\r\n                } else{\r\n                    setError(res.error)\r\n                }\r\n            })\r\n    };\r\n\r\n    useEffect(()=> {\r\n        getAllSportifs();\r\n    },[])\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col xs={{span: 8, offset: 2}} md={{span: 6, offset: 3}} sm={{span: 8, offset: 2}} lg={{span: 4, offset: 4}} xl={{span: 4, offset: 4}}>\r\n                    <Row className=\"justify-content-center\">\r\n                        <img src={logo} alt=\"Logo\" width=\"180\" height=\"148\"/>\r\n                        {error !== \"\"  \r\n                            ?  <p className=\"text-danger\">{error}</p> \r\n                            :  <h2></h2>\r\n                        }\r\n                        <LoginForm onLogin={verifySportif}/>                 \r\n                    </Row>        \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nclass Index extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Content}/>\r\n                    <Route path=\"/questionnaires\" component={Questionnaires}/>\r\n                    <Route path=\"/questionnaire/:idQuestionnaire\" component={Questionnaire}/>\r\n                    <Route path=\"/validationQuestionnaire\" component={ValidationQuestionnaire}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    };\r\n}\r\n\r\nReactDOM.render(\r\n    <Index />,\r\n    document.getElementById('root')\r\n);","/*module.exports ={\r\n    url:\"http://localhost:9000/web/\"\r\n}\r\n*/\r\n\r\nmodule.exports ={\r\n    url:\"https://sport-chatlenge.herokuapp.com/web/\"\r\n}\r\n\r\n"],"sourceRoot":""}